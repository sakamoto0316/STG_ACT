//============================================
//
//	破壊されたブロックを生成する処理 [Break.cpp]
//	Author:sakamoto kai
//
//============================================
#include "Break.h"
#include "BreakPiece.h"
#include "renderer.h"
#include "manager.h"
#include "game.h"
#include "map2D.h"
#include "texture.h"
#include "DebugNumber3D.h"
#include "XModel.h"
#include "score.h"

//マクロ定義
#define BLOCK_WIGHT (40.0f)		//横幅
#define BLOCK_HEIGHT (40.0f)	//縦幅
#define BLOCK_WAVE (90)	//振動時間

//====================================================================
//コンストラクタ
//====================================================================
CBreak::CBreak(D3DXVECTOR3 pos, int nPriority)
{
	m_pos = pos;
}

//====================================================================
//デストラクタ
//====================================================================
CBreak::~CBreak()
{

}

//====================================================================
//生成処理
//====================================================================
CBreak *CBreak::Create(D3DXVECTOR3 pos)
{
	CBreak *pPlayer = NULL;

	if (pPlayer == NULL)
	{
		//オブジェクト2Dの生成
		pPlayer = new CBreak(pos);
	}

	//オブジェクトの初期化処理
	if (FAILED(pPlayer->Init()))
	{//初期化処理が失敗した場合
		return NULL;
	}

	return pPlayer;
}

//====================================================================
//初期化処理
//====================================================================
HRESULT CBreak::Init(void)
{
	int nRand = rand() % 2 + 2;

	for (int nCnt = 0; nCnt < nRand; nCnt++)
	{
		CBreak_Piece *pPiece = CBreak_Piece::Create();
		pPiece->SetPos(m_pos);
	}

	return S_OK;
}

//====================================================================
//終了処理
//====================================================================
void CBreak::Uninit(void)
{

}

//====================================================================
//更新処理
//====================================================================
void CBreak::Update(void)
{

}

//====================================================================
//描画処理
//====================================================================
void CBreak::Draw(void)
{

}